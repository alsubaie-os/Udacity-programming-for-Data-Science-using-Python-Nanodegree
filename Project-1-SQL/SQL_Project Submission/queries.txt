/* Query 1 — Set #1 Question #3 */

/* Joining the [film, film_category, category] tables to get the film_title & category name */
WITH T1 AS
		 (SELECT f.*, fc.category_id, c.name AS category_name
		    FROM film f
		    JOIN film_category fc
		      ON f.film_id = fc.film_id
		    JOIN category c
		      ON fc.category_id = c.category_id
		   WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')),
		   
/* Query to get the colums from T1 and apply the percentiles to get the 4 quartiles levels */
T2 AS
	(SELECT DISTINCT(T1.title) AS title, T1.category_name AS name,
		    T1.rental_duration AS rental_duration,
		    NTILE(4) OVER (ORDER BY T1.rental_duration) AS standard_quartile
	   FROM T1
	  ORDER BY rental_duration, standard_quartile)

/*Use query T2 to get the answer*/
SELECT T2.name, T2.standard_quartile, COUNT(T2.standard_quartile)
  FROM T2
 GROUP BY 1,2
 ORDER BY 1,2;



/* Query 2 — Set #2 Question #1 */

/* Joining the [rental, staff AS stf, store AS str] tables */
WITH T1 AS
		(SELECT r.*, stf.store_id
		   FROM rental r 
		   JOIN staff stf
		     ON r.staff_id = stf.staff_id
		   JOIN store str
		     ON stf.store_id = str.store_id)

SELECT DATE_PART('month',T1.rental_date) Rental_month, 
	   DATE_PART('year',T1.rental_date) Rental_year, 
	   T1.store_id Store_ID, COUNT(T1.*) Count_retails
  FROM T1
 GROUP BY 1,2,3
 ORDER BY 4 DESC;



/* Query 3 — Set #2 Question #2 */

/* In this query, customer and payment tables have been joined */
WITH T1 AS
		(SELECT c.customer_id, c.first_name, c.last_name, 
		 		p.payment_id, p.payment_date, p.amount
		   FROM customer c
		   JOIN payment p
		     ON c.customer_id = p.customer_id),

/* In this query, top 10 paying customers have been selected using the quert T1 */
T2 AS
	(SELECT T1.customer_id, CONCAT(T1.first_name,' ',T1.last_name) fullname, SUM(T1.amount)
	   FROM T1
	  GROUP BY 1,2
	  ORDER BY 3 DESC
	  LIMIT 10),

/* In this query, table T1 and T2 have been joined togethr to get all needed information about the top 10 paying customers from table T1 */
T3 As
	(SELECT * 
	   FROM T1
	   JOIN T2
	     ON T1.customer_id = T2.customer_id)

/* gitting all needed information from table T3 [ months, full name, monthly payment count , monthly paymnet amount ]*/
SELECT DATE_TRUNC('month',T3.payment_date) pay_mon, 
	   CONCAT(T3.first_name,' ',T3.last_name) fullname,
       COUNT(T3.payment_id) pay_countpermon, SUM(T3.amount) pay_amount
  FROM T3
 WHERE DATE_TRUNC('month',T3.payment_date) BETWEEN '20070101' AND '20080101'
 GROUP BY 1,2
 ORDER BY 2,1;


/* Query 4 — Set #2 Question #3  */

/* In this query, customer and payment tables have been joined */
WITH T1 AS
		(SELECT c.customer_id, c.first_name, c.last_name, 
		 		p.payment_id, p.payment_date, p.amount
		   FROM customer c
		   JOIN payment p
		     ON c.customer_id = p.customer_id),

/* In this query, top 10 paying customers have been selected using the quert T1 */
T2 AS
	(SELECT T1.customer_id, CONCAT(T1.first_name,' ',T1.last_name) fullname, SUM(T1.amount)
	   FROM T1
	  GROUP BY 1,2
	  ORDER BY 3 DESC
	  LIMIT 10),

/* In this query, table T1 and T2 have been joined togethr to get all needed information about the top 10 paying customers from table T1 */
T3 As
	(SELECT * 
	   FROM T1
	   JOIN T2
	     ON T1.customer_id = T2.customer_id)

/* gitting all needed information from table T3 [ months, full name,  previous_month, next_month, difference]*/
SELECT pay_mon, fullname, 
	   LAG(sub.pay_amount) OVER (PARTITION BY sub.fullname ORDER BY sub.pay_mon) AS previous_month,
	   LEAD(sub.pay_amount) OVER (PARTITION BY sub.fullname ORDER BY sub.pay_mon) next_month,
	   (LEAD(sub.pay_amount) OVER (PARTITION BY sub.fullname ORDER BY sub.pay_mon) -
	    coalesce((LAG(sub.pay_amount) OVER (PARTITION BY sub.fullname ORDER BY sub.pay_mon)),0)) AS difference
FROM
	(SELECT DATE_TRUNC('month',T3.payment_date) pay_mon, 
		    CONCAT(T3.first_name,' ',T3.last_name) fullname,
		    SUM(T3.amount) pay_amount
	   FROM T3
	  WHERE DATE_TRUNC('month',T3.payment_date) BETWEEN '20070101' AND '20080101'
	  GROUP BY 1,2
	  ORDER BY 2,1) sub;
	
/* 
To identify the customer name who paid the most difference in terms of payments, 
simply Add the previos query to with statement with the name T4 , then the solution will be : 

SELECT T4.fullname, MAX(difference)
  FROM T4
 GROUP BY 1
*/